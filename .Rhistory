dat <- read.csv("C:/Users/jprim/Documents/Academic Stuff/ANES/ANES_conspiracy.csv", header=TRUE, sep=",", na.strings=c("","NA"," "), strip.white=TRUE)
makenumeric <- function(colsn, anes = FALSE, na.strings){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)), # If it's not ANES data
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(colsn)
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
colnames(dat)
# Testing makenumeric
makenumeric(dat[,2:6], ANES = TRUE)
# Testing makenumeric
makenumeric(dat[,2:6], anes = TRUE)
# And not-ANES dat
datnn <-  read.csv("C:/Users/jprim/Documents/Academic Stuff/ANES/compare.csv", header=TRUE, sep=",", na.strings=c("","NA"," "), strip.white=TRUE)
# And not-ANES dat
datnn <-  read.csv("C:/Users/jprim/Documents/Academic Stuff/ANES/compare.csv", header=TRUE, sep=",", na.strings=c("","NA"," "), strip.white=TRUE)
# And not-ANES dat
datnn <-  read.csv("C:/Users/jprim/Documents/Academic Stuff/SICUtilsRepository/compare.csv", header=TRUE, sep=",", na.strings=c("","NA"," "), strip.white=TRUE)
# And not-ANES dat
datnn <-  read.csv("C:/Users/jprim/Documents/Academic Stuff/SIC Lab/SICUtilsRepository/compare.csv", header=TRUE, sep=",", na.strings=c("","NA"," "), strip.white=TRUE)
head(datnn)
# Testing makenumeric with something else
makenumeric(dat[,2], na.strings = "")
# Testing makenumeric with something else
makenumeric(datnn[,2], na.strings = NA)
makenumeric <- function(colsn, anes = FALSE, na.strings){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
NULL,
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(colsn)
ifelse(ncol == 1,
colsn.d[,1] <- as.numeric(colsn.d[,1]),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with ANES
makenumeric(dat[,2:6], anes = TRUE)
makenumeric <- function(colsn, anes = FALSE, na.strings){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
NULL,
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(colsn)
ifelse(colnum == 1,
colsn.d[,1] <- as.numeric(colsn.d[,1]),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with ANES
makenumeric(dat[,2:6], anes = TRUE)
# Testing makenumeric with something else
makenumeric(datnn[,2], na.strings = NA)
# Testing makenumeric with something else
makenumeric(datnn[,2])
# Testing makenumeric with something else
makenumeric(datnn[,2])
makenumeric <- function(colsn, anes = FALSE, na.strings = NA){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
NULL,
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(colsn)
ifelse(colnum == 1,
colsn.d[,1] <- as.numeric(colsn.d[,1]),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with something else
makenumeric(datnn[,2])
makenumeric <- function(colsn, anes = FALSE, na.strings = NULL){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
NULL,
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(colsn)
ifelse(colnum == 1,
colsn.d[,1] <- as.numeric(colsn.d[,1]),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with something else
makenumeric(datnn[,2])
head(datnn)
# And not-ANES dat
datnn <-  read.csv("C:/Users/jprim/Documents/Academic Stuff/SIC Lab/SICUtilsRepository/compare.csv", header=TRUE, sep=",", na.strings=c("","NA"," "), strip.white=TRUE)
# Testing makenumeric with something else
makenumeric(datnn[,2])
colsn <- datnn$Q1Pre
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
NULL,
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
colsn.r <- colsn,
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- colsn
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x))
colsn.r
colsn.d <- as.data.frame(colsn.r)
colsn.d
colnum <- ncol(colsn)
colnum <- ncol(as.data.frame(colsn))
colnum
colnum == 1
colsn.d[,1] <- as.numeric(colsn.d[,1])
colsn.d
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
colsn <- datnn$Q1Pre
colsn
colsn.r <- as.data.frame(colsn)
colsn.r
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x))
colsn.r
colsn.d <- as.data.frame(colsn.r)
colsn.d
colnum <- ncol(as.data.frame(colsn))
ifelse(colnum == 1,
colsn.d[,1] <- as.numeric(colsn.d[,1]),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
colsn.d
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
makenumeric <- function(colsn, anes = FALSE, na.strings = NULL){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
colsn.r <- as.data.frame(colsn),
colsn.r <- lapply(colsn, function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(colsn, function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(as.data.frame(colsn))
ifelse(colnum == 1,
colsn.d[,1] <- as.numeric(colsn.d[,1]),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with something else
makenumeric(datnn[,2])
head(colsn.d)
# Testing makenumeric with something else
head(makenumeric(datnn[,2]))
# Testing makenumeric with something else
makenumeric(datnn[,2])
head(makenumeric(datnn[,2]))
colnames(colsn.d)
colsn <- datnn$Q1Pre
colnames(colsn)
colsn <- as.data.frame(datnn$Q1Pre)
colnames(colsn)
# Testing makenumeric with ANES
makenumeric(dat[,2:6], anes = TRUE)
# Testing makenumeric with something else
makenumeric(datnn[,2])
makenumeric <- function(colsn, anes = FALSE, na.strings = NULL){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
colsn.r <- as.data.frame(colsn),
colsn.r <- lapply(as.data.frame(colsn), function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(as.data.frame(colsn), function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(as.data.frame(colsn))
ifelse(colnum == 1,
colsn.d[,1] <- as.numeric(colsn.d[,1]),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with something else
makenumeric(datnn[,2])
# Testing makenumeric with something else
datnn[,5] <- makenumeric(datnn[,2])
head(datnn)
colsn <- as.data.frame(datnn$Q1Pre)
colsn
head(colsn)
colsn <- datnn$Q1Pre
colsn
# Testing makenumeric with something else
makenumeric(datnn[,2:3])
# Testing makenumeric with something else
makenumeric(datnn[,2])
# Testing makenumeric with something else
beh <- makenumeric(datnn[,2])
head(beh)
makenumeric(datnn[,3])
# Testing makenumeric with something else
makenumeric(datnn[,2:3])
makenumeric <- function(colsn, anes = FALSE, na.strings = NULL){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
colsn.r <- as.data.frame(colsn),
colsn.r <- lapply(as.data.frame(colsn), function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(as.data.frame(colsn), function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(as.data.frame(colsn))
ifelse(colnum == 1,
return("Please enter at least two columns."),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with something else
makenumeric(datnn[,2:3])
makenumeric <- function(colsn, anes = FALSE, na.strings = NULL){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
colsn.r <- as.data.frame(colsn),
colsn.r <- lapply(as.data.frame(colsn), function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(as.data.frame(colsn), function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(as.data.frame(colsn))
ifelse(colnum == 1,
return("Please enter at least two columns."),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with something else
makenumeric(datnn[,2])
makenumeric <- function(colsn, anes = FALSE, na.strings = NULL){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
colsn.r <- as.data.frame(colsn),
colsn.r <- lapply(as.data.frame(colsn), function(x) gsub(na.strings, "", x)) # If it's not ANES data
),
colsn.r <- lapply(as.data.frame(colsn), function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(as.data.frame(colsn))
ifelse(colnum == 1,
return("Error: Please enter at least two columns."),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with something else
makenumeric(datnn[,2:3])
# Testing makenumeric with something else
makenumeric(datnn[,2])
# And weird NA strings
datna <-  read.csv("C:/Users/jprim/Documents/Academic Stuff/SIC Lab/SICUtilsRepository/test.csv", header=TRUE, sep=",", na.strings=c("","NA"," "), strip.white=TRUE)
# Testing makenumeric with weird NA strings
makenumeric(datna[,2:3], na.strings = "test")
makenumeric <- function(colsn, anes = FALSE, na.strings = NULL){
# "x" is the column (or columns) of the variables that you'd like to clean.
# This checks if it's ANES
ifelse(anes == FALSE,
ifelse(is.null(na.strings), # Did they enter NA strings?
colsn.r <- as.data.frame(colsn),
colsn.r <- lapply(as.data.frame(colsn), function(x) gsub(na.strings, NA, x)) # If it's not ANES data
),
colsn.r <- lapply(as.data.frame(colsn), function(x) replace(x, grep("[-]", x), NA)) # If it is ANES data
)
colsn.r <- lapply(colsn.r, function(x) gsub("[^0-9\\.]", "", x)) # Removes any alphabetic characters
colsn.d <- as.data.frame(colsn.r)
colnum <- ncol(as.data.frame(colsn))
ifelse(colnum == 1,
return("Error: Please enter at least two columns."),
colsn.d[,1:colnum] <- sapply(colsn.d[,1:colnum], as.numeric)
)
# Adding an indication that these are numeric.
colnames(colsn.d) <- paste(colnames(colsn.d), "n", sep = ".")
colsn.d
}
# Testing makenumeric with weird NA strings
makenumeric(datna[,2:3], na.strings = "test")
test2 <-
colsn <- datnn$Q1Pre
colsn <- datnn$Q1Pre
test2 <-   makenumeric(datna[,2:3], na.strings = "test")
is.na(test$Q1Pre.n)
is.na(test2$Q1Pre.n)
